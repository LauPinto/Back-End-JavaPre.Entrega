package com.techlab;

import com.techlab.excepciones.StockInsuficienteException;
import com.techlab.productos.Producto;
import com.techlab.servicios.PedidoService;
import com.techlab.servicios.ProductoService;

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ProductoService productoService = new ProductoService();
        PedidoService pedidoService = new PedidoService();


        // ‚≠êÔ∏è ¬°Aqu√≠ invoc√°s la magia para cargar productos!
        productoService.agregarProductosDeEjemplo();

        // Luego sigue el men√∫...

        int opcion;
        do {
            System.out.println("""
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë      ‚öîÔ∏èüõ°Ô∏è MERCADO DE AVENTUREROS üõ°Ô∏è‚öîÔ∏è       ‚ïë
    ‚ïë        Sistema de Gesti√≥n - TECHLAB         ‚ïë
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
    ‚ïë  1) A√±adir nuevo art√≠culo al inventario     ‚ïë
    ‚ïë  2) Mostrar todos los art√≠culos             ‚ïë
    ‚ïë  3) Buscar / Modificar un art√≠culo          ‚ïë
    ‚ïë  4) Eliminar art√≠culo del inventario        ‚ïë
    ‚ïë  5) Forjar un pedido de suministros         ‚ïë
    ‚ïë  6) Consultar pedidos realizados            ‚ïë
    ‚ïë  7) Abandonar el mercado                    ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
        üßô‚Äç‚ôÇÔ∏è Ingrese su elecci√≥n, noble mercader:
    """);
            opcion = scanner.nextInt();
            scanner.nextLine();

            switch (opcion) {
                case 1 -> {
                    System.out.print("üìú Ingrese el nombre del art√≠culo m√≠stico: ");
                    String nombre = scanner.nextLine();
                    System.out.print("\uD83D\uDCB0 Ingrese el valor en monedas de oro: ");
                    double precio = scanner.nextDouble();
                    System.out.print("\uD83C\uDF92 Ingrese la cantidad disponible en el almac√©n: ");
                    int stock = scanner.nextInt();
                    productoService.agregarProducto(nombre, precio, stock);
                    System.out.println("‚úÖ El art√≠culo ha sido registrado en el inventario sagrado.\n");
                }
                case 2 -> {
                    System.out.println("üì¶ Inventario de art√≠culos disponibles en el mercado:");
                    productoService.listarProductos().forEach(System.out::println);
                    System.out.println();
                }
                case 3 -> {
                    System.out.println("""
                        üß≠ Has accedido al Or√°culo de los Objetos.
                         ¬øQu√© deseas realizar, noble comerciante?
                
                           1) üìú Consultar un art√≠culo sin modificarlo
                           2) üõ†Ô∏è Consultar y modificar el art√≠culo
                           Ingrese su elecci√≥n:
                          """);

                    int opcionConsulta = scanner.nextInt();
                    scanner.nextLine(); // limpiar buffer

                    int id;
                    while (true) {
                        System.out.print("üîé Indica el ID del art√≠culo que buscas en el grimorio: ");
                        try {
                            id = scanner.nextInt();
                            scanner.nextLine(); // limpiar buffer
                            break; // Salir del bucle si es v√°lido
                        } catch (InputMismatchException e) {
                            System.out.println("‚ö†Ô∏è ¬°Ese no es un n√∫mero v√°lido! Intenta nuevamente.");
                            scanner.nextLine(); // limpiar entrada incorrecta
                        }
                    }

                    Producto p = productoService.buscarPorId(id);

                    if (p != null) {
                        System.out.println("üìñ He aqu√≠ los detalles del objeto encantado:\n" + p);

                        if (opcionConsulta == 2) {
                            System.out.print("üí∞ Nuevo precio: ");
                            double nuevoPrecio = scanner.nextDouble();

                            System.out.print("üéí Nuevo stock: ");
                            int nuevoStock = scanner.nextInt();
                            scanner.nextLine();

                            p.setPrecio(nuevoPrecio);
                            p.setStock(nuevoStock);

                            System.out.println("‚úÖ ¬°Art√≠culo actualizado con √©xito!\n");
                        }
                    } else {
                        System.out.println("‚ö†Ô∏è No se encontr√≥ ning√∫n artefacto con ese ID.\n");
                    }
                }
                case 4 -> {
                    System.out.print("\uD83D\uDDE1\uFE0F Ingrese el ID del art√≠culo que desea eliminar del mercado: ");
                    int idEliminar = scanner.nextInt();
                    productoService.eliminarProducto(idEliminar);
                    System.out.println("‚ö∞Ô∏è El art√≠culo ha sido removido del plano terrenal.\n");
                }
                case 5 -> {
                    List<Producto> seleccionados = new ArrayList<>();
                    List<Integer> cantidades = new ArrayList<>();
                    String continuar;

                    do {
                        int id = 0;
                        boolean idValido = false;

                        while (!idValido) {
                            try {
                                System.out.print("üéØ Ingrese el ID del art√≠culo a a√±adir al pedido: ");
                                id = scanner.nextInt();
                                scanner.nextLine(); // Limpiar buffer
                                idValido = true;
                            } catch (InputMismatchException e) {
                                System.out.println("‚ö†Ô∏è ¬°Ese no es un n√∫mero v√°lido! Por favor, introduce un n√∫mero de ID.");
                                scanner.nextLine(); // Limpiar entrada inv√°lida
                            }
                        }

                        Producto p = productoService.buscarPorId(id);

                        if (p != null) {
                            int cantidad = 0;
                            boolean cantidadValida = false;

                            while (!cantidadValida) {
                                try {
                                    System.out.print("üî¢ Ingrese la cantidad deseada: ");
                                    cantidad = scanner.nextInt();
                                    scanner.nextLine();
                                    cantidadValida = true;
                                } catch (InputMismatchException e) {
                                    System.out.println("‚ö†Ô∏è Valor inv√°lido. La cantidad debe ser un n√∫mero entero.");
                                    scanner.nextLine();
                                }
                            }

                            seleccionados.add(p);
                            cantidades.add(cantidad);
                        } else {
                            System.out.println("‚ö†Ô∏è No se ha hallado tal art√≠culo en el reino. Intenta con otro ID.");
                        }

                        System.out.print("‚ûï ¬øDesea a√±adir otro art√≠culo al pedido? (s/n): ");
                        continuar = scanner.nextLine().trim().toLowerCase();

                        if (!continuar.equals("s") && !continuar.equals("n")) {
                            do {
                                System.out.print("‚ûï ¬øDesea a√±adir otro art√≠culo al pedido? (s/n): ");
                                continuar = scanner.nextLine().trim().toLowerCase();

                                if (!continuar.equals("s") && !continuar.equals("n")) {
                                    System.out.println("‚ö†Ô∏è Comando no reconocido por los sabios del mercado. Solo se aceptan 's' o 'n'.");
                                }
                            } while (!continuar.equals("s") && !continuar.equals("n"));
                        }

                    } while (continuar.equalsIgnoreCase("s"));

                    try {
                        var nuevoPedido = pedidoService.crearPedido(seleccionados, cantidades);
                        System.out.println("üßæ El pedido ha sido forjado con √©xito:");
                        System.out.println(nuevoPedido + "\n");
                    } catch (StockInsuficienteException e) {
                        System.out.println("üö´ El pedido no pudo completarse: " + e.getMessage() + "\n");
                    }
                }
                case 6 -> {
                    System.out.println("üìú Registro de pedidos realizados en el gremio:");
                    pedidoService.listarPedidos().forEach(pedido -> {
                        System.out.println(pedido);
                        System.out.println("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");
                    });
                    System.out.println();
                    }
                case 7 -> System.out.println("üïØÔ∏è Cerrando el mercado... Que los dioses del c√≥digo te acompa√±en.");
                default -> System.out.println("Opci√≥n no v√°lida.");
            }

        } while (opcion != 7);
    }

    }


